plugins {
    id("java-library")
    id("eclipse")
    id("idea")
    id("maven-publish")
    id("net.neoforged.gradle.userdev") version "7.0.145"
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    maven {
        name = "Regolith Maven"
        url = "https://codeberg.org/EmmaTheMartian/regolith/raw/branch/main/repo/"
    }
    mavenLocal()
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

runs {
    configureEach {
        systemProperty("forge.logging.markers", "REGISTRIES")
        systemProperty("forge.logging.console.level", "debug")
        modSource project.sourceSets.main
    }

    client {
        systemProperty("forge.enabledGameTestNamespaces", project.mod_id)
    }

    server {
        systemProperty("forge.enabledGameTestNamespaces", project.mod_id)
        programArgument("--nogui")
    }

    gameTestServer {
        systemProperty("forge.enabledGameTestNamespaces", project.mod_id)
    }

    data {
        programArguments.addAll(
                "--mod", project.mod_id,
                "--all",
                "--output", file("src/generated/resources/").getAbsolutePath(),
                "--existing", file('src/main/resources/').getAbsolutePath()
        )
    }
}

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDir("src/generated/resources")
}

configurations {
    runtimeClasspath.extendsFrom(localRuntime)
}

jarJar.enable()

dependencies {
    implementation("net.neoforged:neoforge:${neo_version}")

    jarJar(implementation("martian:regolith-neoforge:1.0-beta"))
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(["META-INF/neoforge.mods.toml"]) {
        expand(replaceProperties)
    }
}

publishing {
    publications {
        register("mavenJava", MavenPublication) {
            from(components.java)
        }
    }
    repositories {
        maven {
            url("file://${project.projectDir}/repo")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
